<?php

namespace App\Repository;

/**
 * TareaRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class TareaRepository extends \Doctrine\ORM\EntityRepository
{


    public function listaDql($estado = "", $verificado = "", $pausado = "", $incomprensible = "", $ejecucion = "", $usuario = "", $caso = "")
    {
        $em = $this->getEntityManager();
        $db = $em->createQueryBuilder()->from("App:Tarea", "t")
            ->select("t")
            ->where("t.codigoTareaPk <> 0");
        if (is_numeric($estado)) {
            $db->andWhere("t.estadoTerminado = {$estado}");
            if($estado === 0){
                $db->orWhere("t.estadoTerminado IS NULL");
            }
        }
        if(is_numeric($verificado)){
            $db->andWhere("t.estadoVerificado = {$verificado}");
            if($verificado === 0){
                $db->orWhere("t.estadoVerificado IS NULL");
            }
        }
        if(is_numeric($pausado)){
            $db->andWhere("t.estadoPausa = {$pausado}");
            if($pausado === 0){
                $db->orWhere("t.estadoPausa IS NULL");
            }
        }
        if(is_numeric($incomprensible)){
            $db->andWhere("t.estadoIncomprensible = {$incomprensible}");
            if($incomprensible === 0){
                $db->orWhere("t.estadoIncomprensible IS NULL");
            }
        }
        if(is_numeric($ejecucion)){
            $db->andWhere("t.estadoEjecucion = {$ejecucion}");
            if($ejecucion === 0){
                $db->orWhere("t.estadoEjecucion IS NULL");
            }
        }
        if($usuario != ""){
            $db->andWhere("t.codigoUsuarioAsignaFk = '{$usuario}'");
        }
        if($caso != ""){
            $db->andWhere("t.codigoCasoFk = {$caso}");
        }
        $db->orderBy("t.fechaRegistro", "DESC");
        return $db;

    }

    public function listaPorCaso($intCodigoCasoFk){
      $em = $this->getEntityManager();
      $db = $em->createQueryBuilder()->from("App:Tarea", "t")
        ->select("t")
        ->where("t.codigoCasoFk = {$intCodigoCasoFk}");
      return $db->getQuery()->getResult();

    }

    public function apiListaCaso($intCodigoCasoFk){
        $em = $this->getEntityManager();
        $db = $em->createQueryBuilder()->from("App:Tarea", "t")
            ->select("t.codigoTareaPk")
            ->addSelect("t.fechaRegistro")
            ->addSelect("t.codigoUsuarioAsignaFk")
            ->addSelect("t.descripcion")
            ->where("t.codigoCasoFk = {$intCodigoCasoFk}");
        return $db->getQuery()->getResult();

    }

    public function tableroSinRevisar() {
        $em = $this->getEntityManager();
        $arrSinRevisar = array('numero' => 0, 'arrTareas' => array());
        $dql = "SELECT COUNT(t.codigoTareaPk) as numero FROM App:Tarea t "
            . "WHERE t.estadoTerminado = 1 AND t.estadoVerificado = 0 ";
        $query = $em->createQuery($dql);
        $arrayResultado = $query->getResult();
        if ($arrayResultado) {
            $arrSinRevisar['numero'] = $arrayResultado[0]['numero'];
        }
        $dql = "SELECT t.codigoTareaPk, t.fechaRegistro, t.codigoUsuarioAsignaFk FROM App:Tarea t "
            . "WHERE t.estadoTerminado = 1 AND t.estadoVerificado = 0 ORDER BY t.fechaRegistro";
        $query = $em->createQuery($dql);
        $query->setMaxResults(10);
        $arrayResultado = $query->getResult();
        if ($arrayResultado) {
            $arrSinRevisar['arrTareas'] = $arrayResultado;
        }
        return $arrSinRevisar;
    }

}
